name: Build and push docker image

on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      tag:
        required: true
        type: string
      env_name:
        type: string
        default: development
jobs:
  auth_ecr:
    name: Authenticate ECR
    container: amazon/aws-cli
    runs-on: ubuntu-latest
    environment: ${{ inputs.env_name }}
    steps:
      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-central-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Get ECR Token
        id: get-token
        run: |
          TOKEN=$(aws ecr get-login-password --region eu-central-1)
          echo ::set-output name=aws_token::${TOKEN}
    outputs:
      aws_token: ${{ steps.get-token.outputs.aws_token }}
  build_docker:
    name: Build and push docker image
    environment: ${{ inputs.env_name }}
    runs-on: ubuntu-latest
    needs: [ auth_ecr ]
    container:
      image: ghcr.io/aircall-temp/helper-dind:stable
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHR_TOKEN }}
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    steps:
      - name: Authenticate with ECR
        run: docker login --username AWS --password ${{ needs.auth_ecr.outputs.aws_token }} ${{ inputs.registry }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build image
        run: docker build -t ${{ inputs.registry }}:${{ inputs.tag }} .
      - name: Push image
        run: docker push ${{ inputs.registry }}:${{ inputs.tag }} 
